////////////////////////////////////////////////////////////////////////////////
//   ____  ____
//  /   /\/   /
// /___/  \  /    Vendor: Xilinx
// \   \   \/     Version : 3.6
//  \   \         Application : 7 Series FPGAs Transceivers Wizard
//  /   /         Filename : gtwizard_0_tb.v
// /___/   /\
// \   \  /  \
//  \___\/\___\
//
//
// Module gtwizard_0_TB
// Generated by Xilinx 7 Series FPGAs Transceivers Wizard
//
//
// (c) Copyright 2010-2012 Xilinx, Inc. All rights reserved.
//
// This file contains confidential and proprietary information
// of Xilinx, Inc. and is protected under U.S. and
// international copyright and other intellectual property
// laws.
//
// DISCLAIMER
// This disclaimer is not a license and does not grant any
// rights to the materials distributed herewith. Except as
// otherwise provided in a valid license issued to you by
// Xilinx, and to the maximum extent permitted by applicable
// law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
// WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
// AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
// BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
// INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
// (2) Xilinx shall not be liable (whether in contract or tort,
// including negligence, or under any other theory of
// liability) for any loss or damage of any kind or nature
// related to, arising under or in connection with these
// materials, including for any direct, or any indirect,
// special, incidental, or consequential loss or damage
// (including loss of data, profits, goodwill, or any type of
// loss or damage suffered as a result of any action brought
// by a third party) even if such damage or loss was
// reasonably foreseeable or Xilinx had been advised of the
// possibility of the same.
//
// CRITICAL APPLICATIONS
// Xilinx products are not designed or intended to be fail-
// safe, or for use in any application requiring fail-safe
// performance, such as life-support or safety devices or
// systems, Class III medical devices, nuclear facilities,
// applications related to the deployment of airbags, or any
// other applications that could lead to death, personal
// injury, or severe property or environmental damage
// (individually and collectively, "Critical
// Applications"). Customer assumes the sole risk and
// liability of any use of Xilinx products in Critical
// Applications, subject only to applicable laws and
// regulations governing limitations on product liability.
//
// THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
// PART OF THIS FILE AT ALL TIMES.


`timescale 1ns / 1ps

module shift_tb;

//*************************Parameter Declarations******************************

    parameter   DCLK_PERIOD       =   10.0;

//************************Internal Register Declarations***********************

    //************************** Register Declarations ****************************

    reg             drp_clk_r;
    reg             gsr_r;
    reg             gts_r;


//*********************************Main Body of Code**********************************


    //------------------------------ Global Signals ----------------------------

    //Simulate the global reset that occurs after configuration at the beginning
    //of the simulation.
    assign glbl.GSR = gsr_r;
    assign glbl.GTS = gts_r;

    initial
        begin
            gts_r = 1'b0;
            gsr_r = 1'b1;
            #(16*5);
            gsr_r = 1'b0;
    end


    //------------------------ Generate DRP Clock ----------------------------

    initial begin
        drp_clk_r = 1'b1;
    end

    always
        #(DCLK_PERIOD/2) drp_clk_r = !drp_clk_r;


reg [20*67-1:0] data_stream = {
        3'b010, 64'h1234167812345670,
        3'b010, 64'h2bcd2f12abcdef12,
        3'b010, 64'h3234367812345679,
        3'b010, 64'h4bcd4f12abcdef13,
        3'b010, 64'h5234567812345670,
        3'b010, 64'h6bcd6f12abcdef11,
        3'b010, 64'h7234767812345674,
        3'b010, 64'h8bcd8f12abcdef13,
        3'b010, 64'h9234967812345670,
        3'b010, 64'habcdaf12abcdef11,
        3'b010, 64'hb234b67812345679,
        3'b010, 64'hcbcdcf12abcdef13,
        3'b010, 64'hd234d67812345670,
        3'b010, 64'hebcdef12abcdef11,
        3'b010, 64'hf234f67812345679,
        3'b010, 64'h0bcd0f12abcdef13,
        3'b010, 64'h1234167812345670,
        3'b010, 64'h2bcd2f12abcdef11,
        3'b010, 64'h3234367812345679,
        3'b010, 64'h4234467812345679    
    };
    
    reg [20-1:0] temp = 'h0;
    integer n = 0;
    
    initial
    begin
        #(16*10);
        for (n=0;n<67;n=n+1) begin
            @(posedge drp_clk_r);
            temp = data_stream[20*n +: 20];
        end
        $stop;
    end
    //----------------- Instantiate an stream_manipulator module  -----------------

    stream_manipulator # (20)
    stream_manipulator_i
    (
      .DATA_IN(temp),
      .DATA_OUT(),
      .MASK(0),
      .OFFSET(1),
      .USER_CLK(drp_clk_r)
    );

endmodule
